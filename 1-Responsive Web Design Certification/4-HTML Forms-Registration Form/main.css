body {
    font-family: Tahoma;
    font-size: 16px;
    width: 100%;
    height: 100vh;
    margin: 0px;
    background-color: #f8f8fb;
    color: #0b0c0c;
}

label{
    display: block; 
    margin: 0.5rem 0;
}

h1, p {
    margin: 1em auto;
    text-align: center;
}

form {
    margin: 0 auto;
    max-width: 550px;
    min-width: 300px;
    width: 60vw;
    padding: 0 0 2em 0;
}

fieldset {
    border: none;
    padding: 2rem 0;
    border-bottom: 3px solid #3b3b4f;
}

fieldset:last-of-type {
    border-bottom : none;
}

input, textarea, select {
    width: 100%;
    margin: 10px 0 0 0;
    min-height: 2em;
}

.inline {
    width: unset;
    margin: 0 0.5em 0 0;
    vertical-align: middle;

}

input, textarea {
    background-color: #ececf3;
    border: 1px solid #777779;
    color: #000000;
    
}

input[type="submit"] {
    display: block;
    width: 60%;
    background-color: rgb(109, 156, 255);
    border-color: rgb(81, 110, 188);
    margin: 1em auto;
    height: 2em;
    font-size: 1.1rem;
    min-width: 300px;
}

input[type="file"]{
    padding: 1px 2px;
}

a{
    color: #3271dd;
}

/* NOTES 
-- The vh unit stands for viewport height, and is relative to 1% of the height of the viewport.
-- get rid of the horizontal scroll-bar, by setting the body default margin added by some browsers to 0.
-- The rem unit stands for root em, and is relative to the font size of the html element.
-- During development, it is useful to see the fieldset default borders. However, they make the content appear too separated.
    Remove the border, and add 2rem of padding only to the top and bottom of each fieldset. Be sure to remove the padding from the left and right.
-- The border of the last fieldset element looks a little out of place. You can select the last element of a specific type using the last-of-type CSS pseudo-class, like this:
    p:last-of-type { }
-- Select only the .inline elements, and give them width of unset. This will remove the earlier rule which set all the input elements to width: 100%.
-- To style the submit button, you can use an attribute selector, which selects an element based on the given attribute value. Here is an example:
    input[name="password"]
    The above selects input elements with a name attribute value of password.
-- Most browsers inject their own default CSS properties and values for different elements. If you look closely, you might be able to notice the file input is smaller than the other text input elements. By default, a padding of 1px 2px is given to input elements you can type in
-- 
-- 
-- 
-- 
-- 
-- 
-- 
-- 
-- 
-- 
*/
